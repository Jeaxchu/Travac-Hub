local placeId = game.PlaceId

-- Use the Roblox API to get information about the game
local success, gameInfo = pcall(function()
  return game:GetService("MarketplaceService"):GetProductInfo(placeId, Enum.InfoType.Asset)
end)

-- Check if the API call was successful
if success and gameInfo ~= nil then
  -- Get the name of the game from the game information
  local gameName = gameInfo.Name

local DiscordLib =
    loadstring(game:HttpGet "https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/discord")()

local win = DiscordLib:Window("Nishinji Hub", gameName)

local serv = win:Server("Main", "http://www.roblox.com/asset/?id=6031075938")

local M = serv:Channel("MAIN", "")

-- SETTINGS

local function getOwner()
	for i,v in pairs(game:GetService("Workspace").TycoonSets.Tycoons:GetDescendants()) do
		if v:IsA"Model" and v:FindFirstChild("Owner") then
			if v.Owner.Value == game.Players.LocalPlayer then
				return v
			end
		end
	end
end

local plr = game.Players.LocalPlayer
local function tp(place)
    plr.Character.HumanoidRootPart.CFrame = place
end

-- TOGGLE / BUTTONS

M:Toggle(
    "Auto Steal [VIP ONLY]",
    false,
    function(CollectFunc)
   if CollectFunc then
        _G.GetMoney = true
        while _G.GetMoney do
            for i,v in pairs(game:GetService("Workspace").Tycoons:GetDescendants()) do
                if v:IsA"TouchTransmitter" and v.Parent.Name == "ButtonPart" then
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Parent, 0)
                    wait(0.3)
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Parent, 1)
                end
            end
        wait()
        end
    else
        _G.GetMoney = false
    end
    end
)

M:Button(
    "Delete Laser Door",
    function()
        for i,v in pairs(game:GetService("Workspace").Tycoons:GetDescendants()) do
            if v:IsA"Model" and v:FindFirstChild("Lasers") then
                    v:Destroy()
            end
        end
    end
)

end
